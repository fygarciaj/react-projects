generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_MEGASALUD_URL")
}

model AddressPatient {
  Id         String    @id @db.Char(26)
  patientId  String    @db.Char(26)
  addressId  String    @db.Char(26)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  addresses  addresses @relation(fields: [addressId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "address_patients_addressId_foreign")
  patients   patients  @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "address_patients_patientId_foreign")

  @@index([addressId], map: "address_patients_addressId_foreign")
  @@index([patientId], map: "address_patients_patientId_foreign")
}

model Address {
  Id         String    @id @db.Char(26)
  location   String    @db.VarChar(255)
  deleted_at DateTime? @db.Timestamp(0)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  patient    Address[]
}

model AffiliateTypes {
  Id         String    @id @db.Char(26)
  code       String    @db.Char(1)
  name       String    @unique(map: "affiliate_types_name_unique") @db.VarChar(30)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  patients   Patient[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model appointment_events {
  Id              String                       @id @db.Char(26)
  appointmentId    BigInt?                      @db.UnsignedBigInt
  title            String                       @unique(map: "appointment_events_title_unique") @db.VarChar(255)
  allDay           Boolean                      @default(false)
  start            DateTime                     @db.DateTime(0)
  end              DateTime                     @db.DateTime(0)
  url              String?                      @default("") @db.VarChar(255)
  className        String?                      @default("") @db.VarChar(255)
  editable         Boolean                      @default(true)
  startEditable    Boolean                      @default(true)
  durationEditable Boolean                      @default(true)
  resourceEditable Boolean                      @default(true)
  rendering        appointment_events_rendering @default(background)
  overlap          Boolean                      @default(true)
  constraint       String?                      @db.VarChar(255)
  source           Json?
  color            String                       @default("#0508ff") @db.VarChar(255)
  backgroundColor  String                       @default("#cccccc") @db.VarChar(255)
  borderColor      String                       @default("#fff") @db.VarChar(255)
  textColor        String                       @default("#000") @db.VarChar(255)
  clinicId         String?                      @default("1") @db.Char(26)
  uuid             String                       @unique(map: "appointment_events_uuid_unique") @db.Char(26)
  deleted_at       DateTime?                    @db.Timestamp(0)
  created_at       DateTime?                    @db.Timestamp(0)
  updated_at       DateTime?                    @db.Timestamp(0)

  @@index([end], map: "appointment_events_end_index")
  @@index([start], map: "appointment_events_start_index")
}

model AppointmentStates {
  Id         String    @id @db.Char(26)
  state      String    @unique(map: "appointment_states_state_unique") @db.VarChar(255)
  uuid       String    @db.Char(26)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@index([uuid], map: "appointment_states_uuid_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Appointments {
  Id                      String    @id @db.Char(26)
  appointment_date         DateTime  @db.DateTime(0)
  eventId                  BigInt    @db.UnsignedBigInt
  patientId                BigInt    @db.UnsignedBigInt
  consultationId           BigInt?   @db.UnsignedBigInt
  healt_provider_companyId BigInt    @db.UnsignedBigInt
  appointment_stateId      BigInt    @db.UnsignedBigInt
  contact_phone            String    @db.VarChar(255)
  consultation_reason      String    @db.VarChar(255)
  doctorId                 BigInt    @db.UnsignedBigInt
  order_attention          Int
  date_attention           DateTime? @db.DateTime(0)
  areaId                   BigInt?   @db.UnsignedBigInt
  dx_principalId           BigInt?   @db.UnsignedBigInt
  ripsId                   BigInt?   @db.UnsignedBigInt
  clinicId                 BigInt    @db.UnsignedBigInt
  appointment_value        Decimal?  @db.Decimal(18, 2)
  pay_copay                Boolean   @default(false)
  copay_value              Decimal?  @db.Decimal(13, 2)
  ulid                     String    @db.Char(26)
  deleted_at               DateTime? @db.Timestamp(0)
  created_at               DateTime? @db.Timestamp(0)
  updated_at               DateTime? @db.Timestamp(0)

  @@index([appointment_date], map: "appointments_appointment_date_index")
  @@index([patientId], map: "appointments_patientId_index")
}

model Category {
  Id         String    @id @db.Char(26)
  name       String    @unique(map: "categories_name_unique") @db.VarChar(255)
  uuid       String?   @db.Char(26)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@index([uuid], map: "categories_uuid_index")
}

model City {
  Id                String     @id @db.Char(26)
  dpto_code          String     @db.VarChar(2)
  city_code          String     @db.VarChar(5)
  center_people_code String     @unique(map: "cities_center_people_code_unique") @db.VarChar(8)
  dpto_name          String     @db.VarChar(100)
  city_name          String     @db.VarChar(100)
  center_people_name String     @db.VarChar(100)
  created_at         DateTime?  @db.Timestamp(0)
  updated_at         DateTime?  @db.Timestamp(0)
  clinics            clinics[]
  offices            offices[]
  patients           patients[]

  @@index([center_people_name], map: "cities_center_people_name_index")
  @@index([city_code], map: "cities_city_code_index")
  @@index([city_name], map: "cities_city_name_index")
  @@index([dpto_code], map: "cities_dpto_code_index")
  @@index([dpto_name], map: "cities_dpto_name_index")
}

model Clinic {
  Id                   String     @id @db.Char(26)
  names                 String     @unique(map: "clinics_names_unique") @db.VarChar(100)
  identification_number String     @unique(map: "clinicsIdentification_number_unique") @db.VarChar(20)
  address               String?    @db.VarChar(100)
  phone                 String?    @db.VarChar(20)
  cityId                String     @db.Char(26)
  regimen               String?    @db.VarChar(50)
  legal_representative  String?    @db.VarChar(100)
  deleted_at            DateTime?  @db.Timestamp(0)
  created_at            DateTime?  @db.Timestamp(0)
  updated_at            DateTime?  @db.Timestamp(0)
  cities                cities     @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "clinics_cityId_foreign")
  patients              patients[]

  @@index([cityId], map: "clinics_cityId_foreign")
}

model Consultation {
  Id                      String               @id @db.Char(26)
  consultation_date        DateTime             @db.DateTime(0)
  attention_date           DateTime             @db.DateTime(0)
  patientId                String               @db.Char(26)
  factureId                Int                  @db.UnsignedInt
  cupsId                   String               @db.Char(26)
  autoritation             String               @db.VarChar(255)
  consultation_motiv       String               @db.Text
  questions_interest       String               @db.Text
  antecedentes             String               @db.Text
  physical_exam            String               @db.Text
  temperature              Decimal              @db.Decimal(3, 1)
  arterial_tension__TA     String               @map("arterial_tension _TA") @db.VarChar(255)
  heart_rate_FC            Int
  lung_frequency_FP        Int
  respiratory_frequency_FR Int
  size_T                   Int
  weight                   String               @db.VarChar(255)
  head                     String               @db.Text
  orl                      String               @db.Text
  neck                     String               @db.Text
  thorax                   String               @db.Text
  lungs                    String               @db.Text
  head_vessels_blood       String               @db.Text
  abdomen                  String               @db.Text
  genitalia                String               @db.Text
  musculoskeletal          String               @db.Text
  nervous_system           String               @db.Text
  external_causeId         String               @db.VarChar(255)
  dxmainId                 Int                  @db.UnsignedInt
  dxrelacted1Id            Int?                 @db.UnsignedInt
  dxrelated2Id             Int?                 @db.UnsignedInt
  dxrelated3Id             Int?                 @db.UnsignedInt
  dxmain_typeId            Int                  @db.UnsignedInt
  consultation_value       Decimal              @db.Decimal(15, 3)
  moderator_quota          Decimal              @db.Decimal(15, 3)
  estado                   consultations_estado
  deleted_at               DateTime?            @db.Timestamp(0)
  created_at               DateTime?            @db.Timestamp(0)
  updated_at               DateTime?            @db.Timestamp(0)
  cups                     cups                 @relation(fields: [cupsId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "consultations_cupsId_foreign")
  patients                 patients             @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "consultations_patientId_foreign")

  @@index([attention_date], map: "consultations_attention_date_index")
  @@index([autoritation], map: "consultations_autoritation_index")
  @@index([consultation_date], map: "consultations_consultation_date_index")
  @@index([cupsId], map: "consultations_cupsId_foreign")
  @@index([dxmainId], map: "consultations_dxmainId_index")
  @@index([dxrelacted1Id], map: "consultations_dxrelacted1Id_index")
  @@index([dxrelated2Id], map: "consultations_dxrelated2Id_index")
  @@index([dxrelated3Id], map: "consultations_dxrelated3Id_index")
  @@index([external_causeId], map: "consultations_external_causeId_index")
  @@index([factureId], map: "consultations_factureId_index")
  @@index([patientId], map: "consultations_patientId_foreign")
}

model Cups {
  Id             String          @id @db.Char(26)
  code            String          @unique(map: "cups_code_unique") @db.Char(6)
  description     String          @db.VarChar(255)
  value           Decimal?        @db.Decimal(15, 3)
  is_consultation Boolean
  deleted_at      DateTime?       @db.Timestamp(0)
  created_at      DateTime?       @db.Timestamp(0)
  updated_at      DateTime?       @db.Timestamp(0)
  consultations   consultations[]

  @@index([description], map: "cups_description_index")
}

model DoctorSpecialty {
  id          String      @id @db.Char(26)
  specialtyId String      @db.Char(26)
  doctorId    String      @db.Char(26)
  created_at  DateTime?   @db.Timestamp(0)
  updated_at  DateTime?   @db.Timestamp(0)
  doctors     doctors     @relation(fields: [doctorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "doctor_specialty_doctorId_foreign")
  specialties specialties @relation(fields: [specialtyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "doctor_specialty_specialtyId_foreign")

  @@index([doctorId], map: "doctor_specialty_doctorId_foreign")
  @@index([specialtyId], map: "doctor_specialty_specialtyId_foreign")
}

model Doctor {
  Id                   String             @id @db.Char(26)
  identification_typeId BigInt             @db.UnsignedBigInt
  identification        String             @unique(map: "doctorsIdentification_unique") @db.VarChar(255)
  doctor_code           String             @unique(map: "doctors_doctor_code_unique") @db.VarChar(255)
  first_name            String             @db.VarChar(255)
  second_name           String?            @db.VarChar(255)
  first_surname         String             @db.VarChar(255)
  second_surname        String?            @db.VarChar(255)
  email                 String?            @unique(map: "doctors_email_unique") @db.VarChar(255)
  professional_card     String             @unique(map: "doctors_professional_card_unique") @db.VarChar(255)
  movil_1               String?            @db.VarChar(255)
  movil_2               String?            @db.VarChar(255)
  receive_notifications Boolean            @default(true)
  active                Boolean            @default(true)
  uuid                  String             @unique(map: "doctors_uuid_unique") @db.Char(26)
  deleted_at            DateTime?          @db.Timestamp(0)
  created_at            DateTime?          @db.Timestamp(0)
  updated_at            DateTime?          @db.Timestamp(0)
  doctor_specialty      doctor_specialty[]
}

model Enterprise {
  Id                  String    @id @db.Char(26)
  tipoIdentificacionId BigInt    @db.UnsignedBigInt
  numeroIdentificacion String    @unique(map: "empresas_numeroIdentificacion_unique") @db.VarChar(255)
  nombre_empresa       String    @unique(map: "empresas_nombre_empresa_unique") @db.VarChar(255)
  direccion            String?   @db.VarChar(255)
  telefonos            String?   @db.VarChar(255)
  tipo_persona         String    @default("N") @db.VarChar(255)
  prefijo_factura      String    @default("") @db.VarChar(255)
  consecutivo_factura  BigInt    @default(1)
  codigo_entidad       BigInt
  uuid                 String    @unique(map: "empresas_uuid_unique") @db.Char(26)
  deleted_at           DateTime? @db.Timestamp(0)
  created_at           DateTime? @db.Timestamp(0)
  updated_at           DateTime? @db.Timestamp(0)
}

model encreportes {
  Id          Int       @id @default(autoincrement())
  TITULO1     String?   @db.MediumText
  TITULO2     String?   @db.MediumText
  TITULO3     String?   @db.MediumText
  TEXTO       String?   @db.MediumText
  ENTIDAD     String?   @db.MediumText
  TipoInforme String?   @db.MediumText
  Fecha       DateTime? @db.DateTime(0)
  IdMedico    String?   @db.VarChar(255)
}

model ExternalCause {
  Id         String    @id @db.Char(26)
  code       String    @unique(map: "external_causes_code_unique") @db.VarChar(2)
  name       String    @unique(map: "external_causes_name_unique") @db.VarChar(60)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model HealtProviderCompany {
  Id                        String          @id @db.Char(26)
  identification_number      String          @unique(map: "healt_provider_companiesIdentification_number_unique") @db.VarChar(255)
  name                       String          @unique(map: "healt_provider_companies_name_unique") @db.VarChar(255)
  city                       String?         @db.VarChar(255)
  address                    String?         @db.VarChar(255)
  phone                      String?         @db.VarChar(255)
  days_for_payment           Int             @default(0)
  copayment                  Decimal         @default(0.00) @db.Decimal(8, 2)
  expiration                 Int             @default(0)
  payment_methodId           String          @db.Char(26)
  is_healt_provider_company  Boolean         @default(true)
  codigo_prestadora          String?         @db.VarChar(255)
  moderator_quota            Decimal         @default(0.00) @db.Decimal(8, 2)
  with_copayment             Boolean         @default(false)
  with_moderador             Boolean         @default(false)
  with_advance_payment       Boolean         @default(false)
  with_moderator_anticipated Boolean         @default(false)
  contract                   String?         @db.VarChar(255)
  identification_count_cobro String?         @db.VarChar(255)
  active                     Boolean         @default(true)
  deleted_at                 DateTime?       @db.Timestamp(0)
  created_at                 DateTime?       @db.Timestamp(0)
  updated_at                 DateTime?       @db.Timestamp(0)
  payment_methods            payment_methods @relation(fields: [payment_methodId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "healt_provider_companies_payment_methodId_foreign")
  patients                   patients[]

  @@index([address], map: "healt_provider_companies_address_index")
  @@index([codigo_prestadora], map: "healt_provider_companies_codigo_prestadora_index")
  @@index([payment_methodId], map: "healt_provider_companies_payment_methodId_foreign")
}

model IdentificationType {
  Id         String     @id @db.Char(26)
  code       String     @unique(map: "identification_types_code_unique") @db.Char(3)
  name       String     @unique(map: "identification_types_name_unique") @db.VarChar(255)
  deleted_at DateTime?  @db.Timestamp(0)
  created_at DateTime?  @db.Timestamp(0)
  updated_at DateTime?  @db.Timestamp(0)
  patients   patients[]
}

model InstitutionProviderServices {
  Id                       String    @id @db.Char(26)
  identification_typeId     String    @db.Char(26)
  ips_code                  String    @unique(map: "institution_provider_services_ips_code_unique") @db.VarChar(10)
  nit_ips                   String?   @db.VarChar(20)
  name                      String    @unique(map: "institution_provider_services_name_unique") @db.VarChar(60)
  cityId                    String?   @default("2587") @db.Char(26)
  address                   String?   @db.VarChar(255)
  phone                     String?   @db.VarChar(255)
  term                      Int       @default(0)
  copayment                 Decimal   @default(0.00) @db.Decimal(8, 2)
  expire                    Int       @default(0)
  payment_methodId          String    @default("1") @db.Char(26)
  is_healt_provider_service Boolean   @default(true)
  active                    Boolean   @default(true)
  codigo_prestadora         String?   @db.VarChar(255)
  moderator_fee             Decimal   @default(0.00) @db.Decimal(8, 2)
  charges_copayment         Boolean   @default(false)
  charges_moderator         Boolean   @default(false)
  advance_copayment         Boolean   @default(false)
  advance_moderator         Boolean   @default(false)
  contrat                   String?   @db.VarChar(255)
  nit_count_charges         String?   @db.VarChar(255)
  uuid                      String    @db.Char(26)
  deleted_at                DateTime? @db.Timestamp(0)
  created_at                DateTime? @db.Timestamp(0)
  updated_at                DateTime? @db.Timestamp(0)

  @@index([address], map: "institution_provider_services_address_index")
  @@index([codigo_prestadora], map: "institution_provider_services_codigo_prestadora_index")
  @@index([uuid], map: "institution_provider_services_uuid_index")
}

model MaritalStatus {
  Id         String     @id @db.Char(26)
  code       String     @db.VarChar(255)
  name       String     @unique(map: "marital_statuses_name_unique") @db.VarChar(255)
  deleted_at DateTime?  @db.Timestamp(0)
  created_at DateTime?  @db.Timestamp(0)
  updated_at DateTime?  @db.Timestamp(0)
  patients   patients[]
}

model Media {
  Id                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  model_type            String    @db.VarChar(255)
  modelId               BigInt    @db.UnsignedBigInt
  uuid                  String?   @unique(map: "media_uuid_unique") @db.Char(36)
  collection_name       String    @db.VarChar(255)
  name                  String    @db.VarChar(255)
  file_name             String    @db.VarChar(255)
  mime_type             String?   @db.VarChar(255)
  disk                  String    @db.VarChar(255)
  conversions_disk      String?   @db.VarChar(255)
  size                  BigInt    @db.UnsignedBigInt
  manipulations         Json
  custom_properties     Json
  generated_conversions Json
  responsive_images     Json
  order_column          Int?      @db.UnsignedInt
  created_at            DateTime? @db.Timestamp(0)
  updated_at            DateTime? @db.Timestamp(0)

  @@index([model_type, modelId], map: "media_model_type_modelId_index")
  @@index([order_column], map: "media_order_column_index")
}

model Occupation {
  Id                    String     @id @db.Char(26)
  ciuo_code              String     @db.Char(4)
  occupation_description String     @unique(map: "occupations_occupation_description_unique") @db.VarChar(255)
  risk                   Int        @default(1)
  deleted_at             DateTime?  @db.Timestamp(0)
  created_at             DateTime?  @db.Timestamp(0)
  updated_at             DateTime?  @db.Timestamp(0)
  patients               patients[]

  @@index([ciuo_code], map: "occupations_ciuo_code_index")
}

model Office {
  Id                   String    @id @db.Char(26)
  names                 String    @unique(map: "offices_names_unique") @db.VarChar(255)
  identification_number String    @unique(map: "officesIdentification_number_unique") @db.VarChar(255)
  address               String    @db.VarChar(255)
  phone                 String    @db.VarChar(255)
  cityId                String    @db.Char(26)
  regimen               String    @db.VarChar(255)
  ceo_office            String    @db.VarChar(255)
  created_at            DateTime? @db.Timestamp(0)
  updated_at            DateTime? @db.Timestamp(0)
  cities                cities    @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "offices_cityId_foreign")

  @@index([cityId], map: "offices_cityId_foreign")
}

model Patient {
  Id                      String                   @id @db.Char(26)
  identification_typeId    String                   @db.Char(26)
  identification_number    String                   @unique(map: "patientsIdentification_number_unique") @db.VarChar(20)
  first_surname            String                   @db.VarChar(30)
  second_surname           String?                  @db.VarChar(30)
  first_name               String                   @db.VarChar(30)
  second_name              String?                  @db.VarChar(30)
  full_name                String?                  @db.VarChar(150)
  healt_provider_companyId String                   @db.Char(26)
  user_typeId              String                   @db.Char(26)
  affiliate_typeId         String                   @db.Char(26)
  father                   String?                  @db.VarChar(255)
  mother                   String?                  @db.VarChar(255)
  companion                String?                  @db.VarChar(255)
  marital_statusId         String                   @db.Char(26)
  occupationId             String                   @db.Char(26)
  date_birth               DateTime?                @default(dbgenerated("'1900-01-01'")) @db.Date
  measure_age              Int?                     @default(dbgenerated("1"))
  genre                    PatientGenre
  home_area                PatientHomeArea
  cityId                   String                   @db.Char(26)
  email                    String?                  @db.VarChar(100)
  contact                  String?                  @db.VarChar(100)
  active                   Boolean?                 @default(true)
  clinicId                 String                   @db.Char(26)
  observations             String?                  @db.Text
  deleted_at               DateTime?                @db.Timestamp(0)
  created_at               DateTime?                @db.Timestamp(0)
  updated_at               DateTime?                @db.Timestamp(0)
  address_patients         address_patients[]
  consultations            consultations[]
  affiliate_types          affiliate_types          @relation(fields: [affiliate_typeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_affiliate_typeId_foreign")
  cities                   cities                   @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_cityId_foreign")
  clinics                  clinics                  @relation(fields: [clinicId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_clinicId_foreign")
  healt_provider_companies healt_provider_companies @relation(fields: [healt_provider_companyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_healt_provider_companyId_foreign")
  identification_types     identification_types     @relation(fields: [identification_typeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patientsIdentification_typeId_foreign")
  marital_statuses         marital_statuses         @relation(fields: [marital_statusId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_marital_statusId_foreign")
  occupations              occupations              @relation(fields: [occupationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_occupationId_foreign")
  user_types               user_types               @relation(fields: [user_typeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_user_typeId_foreign")
  phones_patients          phones_patients[]

  @@index([affiliate_typeId], map: "patients_affiliate_typeId_foreign")
  @@index([cityId], map: "patients_cityId_foreign")
  @@index([clinicId], map: "patients_clinicId_foreign")
  @@index([healt_provider_companyId], map: "patients_healt_provider_companyId_foreign")
  @@index([identification_typeId], map: "patientsIdentification_typeId_foreign")
  @@index([marital_statusId], map: "patients_marital_statusId_foreign")
  @@index([occupationId], map: "patients_occupationId_foreign")
  @@index([user_typeId], map: "patients_user_typeId_foreign")
}

model PaymentMethod {
  Id                      String                     @id @db.Char(26)
  name                     String                     @db.VarChar(255)
  expire_days              Int                        @default(0)
  deleted_at               DateTime?                  @db.Timestamp(0)
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  healt_provider_companies healt_provider_companies[]
}

model PersonalAccessToken {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String    @db.VarChar(255)
  tokenableId    BigInt    @db.UnsignedBigInt
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenableId], map: "personal_access_tokens_tokenable_type_tokenableId_index")
}

model Phone {
  Id             String            @id @db.Char(26)
  number          String            @db.VarChar(255)
  deleted_at      DateTime?         @db.Timestamp(0)
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  phones_patients phones_patients[]
}

model PhonesPatient {
  Id         String    @id @db.Char(26)
  patientId  String    @db.Char(26)
  phoneId    String    @db.Char(26)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  patient    Patient   @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "phones_patients_patientId_foreign")
  phone      Phone     @relation(fields: [phoneId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "phones_patients_phoneId_foreign")

  @@index([patientId], map: "phones_patients_patientId_foreign")
  @@index([phoneId], map: "phones_patients_phoneId_foreign")
}

model Products {
  Id         String    @id @db.Char(26)
  name       String    @unique(map: "products_name_unique") @db.VarChar(255)
  cost       Decimal?  @db.Decimal(15, 3)
  price      Decimal   @default(0.000) @db.Decimal(15, 3)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model Sessions {
  id            String  @id @db.VarChar(255)
  userId        BigInt? @db.UnsignedBigInt
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([userId], map: "sessions_userId_index")
}

model Specialty {
  Id              String             @id @db.Char(26)
  name             String             @unique(map: "specialties_name_unique") @db.VarChar(255)
  uuid             String?            @db.Char(26)
  deleted_at       DateTime?          @db.Timestamp(0)
  created_at       DateTime?          @db.Timestamp(0)
  updated_at       DateTime?          @db.Timestamp(0)
  doctor_specialty doctor_specialty[]

  @@index([uuid], map: "specialties_uuid_index")
}

model Area {
  Id           Int     @id @default(autoincrement())
  Area         String? @db.VarChar(255)
  Departamento String? @db.VarChar(255)
  Codigo       String? @db.VarChar(255)
}

model tablaareasusuarios {
  Id              Int     @id @default(autoincrement())
  NumeroDocumento String? @db.VarChar(255)
  AreasUsuario    String? @db.VarChar(255)
}

model tablacitas {
  Id               Int       @id @default(autoincrement())
  Fecha            DateTime? @db.DateTime(0)
  Hora             String?   @db.VarChar(255)
  NumeroDocumento  String?   @db.VarChar(255)
  Paciente         String?   @db.VarChar(255)
  Entidad          String?   @db.VarChar(255)
  Telefono         String?   @db.VarChar(255)
  Observaciones    String?   @db.VarChar(255)
  IdMedico         String?   @db.VarChar(255)
  Estado           String?   @db.VarChar(255)
  Evento           String?   @db.MediumText
  ValorEvento      Decimal?  @db.Decimal(11, 2)
  NumeroHistoria   String?   @db.VarChar(255)
  Turno            Int?
  DiaLock          Int?      @db.SmallInt
  FormaPago        String?   @db.MediumText
  ValorCuotaMod    String?   @db.VarChar(20)
  IdPrestador      String?   @db.MediumText
  FechaHraSolicita DateTime? @db.DateTime(0)
  FechaHraAtiende  DateTime? @db.DateTime(0)
  Area             String?   @db.MediumText
  DxPrincipal      String?   @db.MediumText
  IdRIPS           String?   @db.VarChar(100)
  Consultorio      String?   @db.VarChar(5)
}

model tablaconfhorarios {
  Id         Int     @id @default(autoincrement())
  DiaSemana  String? @db.VarChar(255)
  HraIniM    String? @db.VarChar(255)
  HraFinT    String? @db.VarChar(255)
  HraIniT    String? @db.VarChar(255)
  HraFinM    String? @db.VarChar(255)
  IdTratante String? @db.VarChar(255)

  @@index([IdTratante], map: "IdTratante")
}

model tablaconfighorario {
  Id             Int     @id @default(autoincrement())
  IntervaloCitas Int?
  HraIni         String? @db.VarChar(255)
  HraFIN         String? @db.VarChar(255)
  citasXdia      Int
}

model tablaconsultas {
  Indices          Int       @id @default(autoincrement())
  NumeroHistoria   String?   @db.VarChar(255)
  NumeroConsulta   String?   @db.VarChar(255)
  NumeroDocumento  String?   @db.VarChar(255)
  FechaConsulta    DateTime? @db.DateTime(0)
  MotivoConsulta   String?   @db.MediumText
  EnfermedadActual String?   @db.MediumText
  Examenes         String?   @db.MediumText
  Plan             String?   @db.MediumText
  Tratamiento      String?   @db.MediumText
  ExamenFisico     String?   @db.MediumText
  DxPrincipal      String?   @db.MediumText
  dx1              String?   @db.MediumText
  dx2              String?   @db.MediumText
  dx3              String?   @db.MediumText
  Diagnosticos     String?   @db.MediumText
  TA               String?   @db.VarChar(255)
  FC               String?   @db.VarChar(255)
  FR               String?   @db.VarChar(255)
  Peso             String?   @db.VarChar(255)
  Talla            String?   @db.VarChar(255)
  RevisionXsistema String?   @db.MediumText
  Paraclinicos     String?   @db.MediumText
  Analisis         String?   @db.MediumText
  FUM              String?   @db.VarChar(255)
  bloqueada        String?   @db.VarChar(255)

  @@index([Indices], map: "Indices")
}

model tablacups {
  Id                 Int     @id @default(autoincrement())
  Codigo             String? @db.VarChar(6)
  Nombre             String? @db.VarChar(255)
  Sexo               String? @db.VarChar(1)
  Edad_ini           String? @db.VarChar(4)
  Edad_fin           String? @db.VarChar(4)
  archivo            String? @db.VarChar(3)
  Qx                 String? @db.VarChar(1)
  Tipo_procedimiento String? @db.VarChar(255)
  No_minimo          String? @db.VarChar(2)
  No_maximo          String? @db.VarChar(2)
  Finalidad          String? @db.VarChar(2)
  Dx_requerido       String? @db.VarChar(2)
  Edad_Inicial_dias  String? @db.VarChar(10)
  Edad_final_dias    String? @map("Edad-final-dias") @db.VarChar(10)
  POS                String? @db.VarChar(1)
  favorito           String? @db.VarChar(10)

  @@index([Codigo], map: "Codigo")
}

model tabladetallesfacturas {
  id            Int     @id @default(autoincrement())
  NumeroFactura Int?
  CodigoEvento  String? @db.VarChar(255)
  Detalle       String? @db.VarChar(255)
  Cantidad      Int?
  ValorUnitario Int?
  Copago        Int?
  Prefijo       String? @db.VarChar(50)
  CodMedico     String? @db.VarChar(100)

  @@index([NumeroFactura], map: "NumeroFactura")
}

model tabladian {
  Id               Int      @id @default(autoincrement())
  Tipo             String?  @db.MediumText
  Resolucion       String?  @db.MediumText
  Fecha            DateTime @db.Date
  Desde            Int
  Hasta            Int
  Texto1           String?  @db.MediumText
  Texto2           String?  @db.MediumText
  Regimen          String?  @db.MediumText
  FechaVencimiento DateTime @db.Date
  Prefijo          String?  @db.VarChar(10)
  habilitaautoriza String?  @db.VarChar(50)
}

model tablaencabezadosfa {
  Id          Int     @id @default(autoincrement())
  Texto1      String? @db.MediumText
  Texto2      String? @db.MediumText
  Texto3      String? @db.MediumText
  Texto4      String? @db.MediumText
  Texto5      String? @db.MediumText
  Texto6      String? @db.MediumText
  Texto7      String? @db.MediumText
  IdMedico    String? @db.VarChar(255)
  Logo        Bytes?  @db.MediumBlob
  FirmaMedico Bytes?  @db.MediumBlob
  PieFirma    String? @db.VarChar(255)
}

model tablaentidades {
  Id                 Int     @id @default(autoincrement())
  CodigoEntidad      String? @db.VarChar(255)
  DescripcionEntidad String? @db.MediumText
  Nit                String? @db.VarChar(255)
  Direccion          String? @db.VarChar(255)
  Telefonos          String? @db.VarChar(255)
}

model tablaeventos {
  Id         Int     @id @default(autoincrement())
  Eventos    String? @db.VarChar(255)
  codigoCUPS String? @db.VarChar(50)
  RIPS       String? @db.VarChar(50)
}

model tablafacturas {
  Id                 Int       @id @default(autoincrement())
  Prefijo            String?   @db.VarChar(10)
  NumeroFactura      Int?      @db.SmallInt
  FechaFactura       DateTime  @db.Date
  NombreCliente      String?   @db.MediumText
  Direccion          String?   @db.MediumText
  Observaciones      String?   @db.MediumText
  NumeroDocumento    String?   @db.VarChar(255)
  Telefono           String?   @db.VarChar(255)
  Procesada          String?   @db.VarChar(4)
  FechaProceso       DateTime  @db.Date
  Ciudad             String?   @db.VarChar(255)
  Resolucion         String?   @db.MediumText
  Estadofactura      String?   @db.VarChar(255)
  NumeroDocPaciente  String?   @db.VarChar(255)
  NombrePaciente     String?   @db.VarChar(255)
  NumeroAutorizacion String?   @db.VarChar(255)
  Admision           String?   @db.VarChar(255)
  TipoAfiliacion     String?   @db.VarChar(255)
  Medico             String?   @db.VarChar(255)
  fchvencimiento     DateTime  @db.Date
  TipoFactura        String?   @db.VarChar(255)
  Municipio          String?   @db.MediumText
  FechaRadicado      DateTime  @db.Date
  FechaIni           DateTime? @db.Date
  FechaFin           DateTime? @db.Date
  TipoDocPaciente    String?   @db.VarChar(2)
  usuario            String?   @db.VarChar(50)
  IdTratante         String?   @db.VarChar(50)
  CodMedico          String?   @db.VarChar(100)

  @@index([NumeroFactura], map: "NumeroFactura")
}

model tablafestivos {
  Id         Int     @id @default(autoincrement())
  IdMedico   String  @db.Text
  Dia        String? @db.VarChar(255)
  Mes        String? @db.VarChar(255)
  Festividad String? @db.VarChar(50)
  A_o        Int?    @map("Año")
}

model tablahistorias {
  Id                 Int       @id @default(autoincrement())
  NumeroHistoria     String?   @db.VarChar(255)
  FechaNacimiento    DateTime? @db.DateTime(0)
  FechaHistoria      DateTime? @db.DateTime(0)
  Empresa            String?   @db.VarChar(255)
  OCUPACION          String?   @db.MediumText
  Direcci_n          String?   @map("Dirección") @db.MediumText
  Tel_fonos          String?   @map("Teléfonos") @db.VarChar(30)
  EC                 String?   @db.VarChar(255)
  TipoDocumento      String?   @db.VarChar(255)
  NumeroDocumento    String?   @db.VarChar(255)
  CodigoEntidad      String?   @db.VarChar(255)
  TipoUsuario        String?   @db.VarChar(255)
  PrimerApellido     String?   @db.VarChar(255)
  SegundoApellido    String?   @db.VarChar(255)
  PrimerNombre       String?   @db.VarChar(255)
  SegundoNombre      String?   @db.MediumText
  Edad               String?   @db.VarChar(255)
  UnidadMedidaEdad   String?   @db.VarChar(255)
  Sexo               String?   @db.VarChar(255)
  CodigoDtoMunicipio String?   @db.VarChar(255)
  ZonaUrbana         String?   @db.VarChar(255)
  CodMedico          String?   @db.VarChar(255)
  PathIMG1           String?   @db.MediumText
  Email              String?   @db.VarChar(255)
  IdMedico           String?   @db.VarChar(255)
  ZonaUrbana1        String?   @db.VarChar(255)
  CodMedico1         String?   @db.VarChar(255)
  PathIMG11          String?   @db.MediumText
  Email1             String?   @db.VarChar(255)
  Observaciones      String?   @db.MediumText
  Acompa_ante        String?   @map("Acompañante") @db.VarChar(255)
  Parentezco         String?   @db.VarChar(255)
  SedeCodigoEntidad  String?   @db.VarChar(100)
}

model tablahistorias_old {
  Id                 Int       @id @default(autoincrement())
  NumeroHistoria     String?   @unique(map: "NumeroHistoria_2") @db.VarChar(255)
  FechaNacimiento    DateTime? @db.Date
  FechaHistoria      DateTime? @db.DateTime(0)
  Empresa            String?   @db.VarChar(255)
  OCUPACION          String?   @db.MediumText
  Direcci_n          String?   @map("Dirección") @db.MediumText
  Tel_fonos          String?   @map("Teléfonos") @db.VarChar(30)
  EC                 String?   @db.VarChar(255)
  TipoDocumento      String?   @db.VarChar(255)
  NumeroDocumento    String?   @unique(map: "NumeroDocumento") @db.VarChar(255)
  CodigoEntidad      String?   @db.VarChar(255)
  TipoUsuario        String?   @db.VarChar(255)
  PrimerApellido     String?   @db.VarChar(255)
  SegundoApellido    String?   @db.VarChar(255)
  PrimerNombre       String?   @db.VarChar(255)
  SegundoNombre      String?   @db.MediumText
  Edad               String?   @db.VarChar(255)
  UnidadMedidaEdad   String?   @db.VarChar(255)
  Sexo               String?   @db.VarChar(255)
  CodigoDtoMunicipio String?   @db.VarChar(255)
  ZonaUrbana         String?   @db.VarChar(255)
  CodMedico          String?   @db.VarChar(255)
  PathIMG1           String?   @db.MediumText
  Email              String?   @db.VarChar(255)
  IdMedico           String?   @db.VarChar(255)
  Email1             String?   @db.VarChar(255)
  Observaciones      String?   @db.LongText
  sedecodigoentidad  String?   @db.VarChar(150)
  informante         String?   @db.VarChar(255)
  parentesco         String?   @db.VarChar(255)
  edadInformante     String?   @db.VarChar(10)

  @@index([CodigoEntidad], map: "CodigoEntidad")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablainsumos {
  Id             Int       @id @default(0)
  NumeroHistoria String?   @db.VarChar(255)
  FechaInsumo    DateTime? @db.DateTime(0)
  Insumo         String?   @db.VarChar(255)
  Cantidad       Float?
  Valor          Float?
}

model tablameses {
  Id        Int     @id @default(autoincrement())
  DiaN      Int?
  DiaNombre String? @db.VarChar(255)
}

model tablanotasagenda {
  Id   Int       @id @default(autoincrement())
  Dia  DateTime? @db.DateTime(0)
  Hora Int?      @db.TinyInt
  Nota String?   @db.VarChar(255)
}

model tablapacxentidad {
  Id            Int     @id @default(autoincrement())
  IdMedico      String? @db.VarChar(255)
  CodigoEntidad String? @db.VarChar(255)
  Lunes         Int?
  Martes        Int?
  Mi_rcoles     Int?    @map("Miércoles")
  Jueves        Int?
  Viernes       Int?
  S_bado        Int?    @map("Sábado")
  Domingo       Int?

  @@index([CodigoEntidad], map: "CodigoEntidad")
  @@index([IdMedico], map: "IdMedico")
}

model tablaripsconsultas {
  Id                 Int       @id @default(autoincrement())
  NumeroHistoria     String?   @db.VarChar(255)
  NumFactura         Int?
  IdMedico           String?   @db.VarChar(50)
  CodigoMedico       String?   @db.VarChar(50)
  CodigoEntidad      String?   @db.VarChar(255)
  sedecodigo         String?   @db.MediumText
  SedeCodigoEntidad  String?   @db.VarChar(255)
  TipoIdentificacion String?   @db.VarChar(2)
  NumeroDocumento    String?   @db.VarChar(255)
  Fecha              DateTime? @db.DateTime(0)
  NumAutorizacion    String?   @db.VarChar(15)
  CodConsulta        String?   @db.VarChar(8)
  FinalidadConsulta  String?   @db.VarChar(2)
  CausaExterna       String?   @db.VarChar(2)
  DxPrincipal        String?   @db.VarChar(4)
  DxRel1             String?   @db.VarChar(4)
  DxRel2             String?   @db.VarChar(4)
  DxRel3             String?   @db.VarChar(4)
  TipoDxPrincipal    String?   @db.VarChar(1)
  ValorC             Float?
  ValorCuotaMod      Float?
  ValorNeto          Float?
  Orden              Int?
  EstadoFactura      String?   @db.VarChar(11)
  prefijo            String?   @db.VarChar(50)
  IdRIPS             String?   @db.VarChar(20)
  Edad               String?   @db.VarChar(50)
  UnidadMedidaEdad   String?   @db.VarChar(10)
  TipoUsuario        String?   @db.VarChar(50)
  idtratante         String?   @db.VarChar(50)

  @@index([CodigoMedico], map: "CodigoMedico")
  @@index([IdMedico], map: "IdMedico")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablaripsmedico {
  Id              Int     @id @default(autoincrement())
  CodigoMedico    String  @default("") @db.VarChar(255)
  NombreMedico    String? @db.VarChar(255)
  TipoDocumento   String? @db.VarChar(255)
  NumeroDocumento String? @db.VarChar(255)
  CodEspecialidad String? @db.VarChar(255)

  @@index([CodigoMedico], map: "CodigoMedico")
  @@index([NumeroDocumento], map: "NumeroDocumento")
}

model tablaripsproc {
  Id                         Int       @id @default(autoincrement())
  Turno                      Int?
  IdTemp                     Int?
  NumeroHistoria             String?   @db.VarChar(255)
  CodigoEntidad              String?   @db.VarChar(10)
  TipoIdentificacion         String?   @db.VarChar(2)
  NumeroDocumento            String?   @db.VarChar(20)
  Fecha                      DateTime? @db.DateTime(0)
  FechaIni                   DateTime? @db.DateTime(0)
  FechaFin                   DateTime? @db.DateTime(0)
  AmbitoRealizaProcedimiento String?   @db.VarChar(1)
  FinalidadProcedimiento     String?   @db.VarChar(1)
  PersonalQatiende           String?   @db.VarChar(1)
  DxPrincipal                String?   @db.VarChar(4)
  DxRelacionado              String?   @db.VarChar(4)
  Complicacion               String?   @db.VarChar(4)
  FormaRealizQx              String?   @db.VarChar(1)
  IdMedico                   String?   @db.VarChar(255)
  CodigoMedico               String?   @db.VarChar(255)
  NombreMedico               String?   @db.VarChar(255)
  CodigoProfesional          String?   @db.VarChar(255)
  Area                       String?   @db.VarChar(255)
  Tipousuario                String?   @db.VarChar(255)
  NumeroIdUsr                String?   @db.VarChar(255)
  UnidadMedidaEdad           Int?
  Edad                       Int?
  EstadoFactura              String?   @db.VarChar(255)
  SedeCodigoEntidad          String?   @db.VarChar(50)
  IdRIPS                     String?   @db.VarChar(50)
  idtratante                 String?   @db.VarChar(50)
  IdUsuario                  String?   @db.VarChar(50)

  @@index([CodigoEntidad], map: "CodigoEntidad")
  @@index([NumeroDocumento], map: "NumeroDocumento")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablaripsprocdet {
  Id                Int     @id @default(autoincrement())
  IdTemp            Int?
  IdProcedimiento   Float?
  NumeroHistoria    String? @db.VarChar(255)
  SedeCodigoEntidad String? @db.VarChar(10)
  prefijo           String? @db.VarChar(10)
  NumFactura        Int?
  NumAutorizacion   String? @db.VarChar(15)
  CodProcedimiento  String? @db.VarChar(8)
  Orden             Int?
  Cantidad          Float?
  ValorUnitario     Float?
  VUCuotaMod        Float?
  archivo           String? @db.MediumText

  @@index([IdProcedimiento], map: "IdProcedimiento")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablaripsprocedimientos {
  Id                         Int       @id @default(autoincrement())
  NumeroHistoria             String?   @db.VarChar(255)
  NumFactura                 Int?
  CodigoEntidad              String?   @db.VarChar(10)
  TipoIdentificacion         String?   @db.VarChar(2)
  NumeroDocumento            String?   @db.VarChar(20)
  Fecha                      DateTime? @db.Date
  NumAutorizacion            String?   @db.VarChar(15)
  CodProcedimiento           String?   @db.VarChar(8)
  SedeCodigoEntidad          String?   @db.VarChar(255)
  AmbitoRealizaProcedimiento String?   @db.VarChar(1)
  FinalidadProcedimiento     String?   @db.VarChar(1)
  PersonalQatiende           String?   @db.VarChar(1)
  DxPrincipal                String?   @db.VarChar(4)
  DxRelacionado              String?   @db.VarChar(4)
  Complicacion               String?   @db.VarChar(4)
  FormaRealizQx              String?   @db.VarChar(1)
  ValorP                     Float?
  ValorCuotaMod              Float?
  ValorNeto                  Float?
  IdMedico                   String?   @db.VarChar(255)
  CodigoMedico               String?   @db.VarChar(50)
  Orden                      Int?
  EstadoFactura              String?   @db.VarChar(11)

  @@index([NumFactura], map: "NumFactura")
  @@index([NumeroDocumento], map: "NumeroDocumento")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablarutas {
  Id            Int     @id @default(autoincrement())
  RutaTablasHC1 String? @db.MediumText
  RutaTablasHC2 String? @db.VarChar(255)
}

model tablasedesentidades {
  Id              Int     @id @default(0)
  DescripcionSede String? @db.VarChar(255)
  CodigoEntidad   String? @db.VarChar(255)
}

model tablausuarios {
  Index           Int     @id @default(autoincrement())
  Usuario         String? @db.VarChar(255)
  Clave           String? @db.VarChar(255)
  Tipo            String? @db.VarChar(255)
  PrimerNombre    String? @db.VarChar(255)
  SegundoNombre   String? @db.VarChar(255)
  PrimeroApellido String? @db.VarChar(255)
  SegundoApellido String? @db.VarChar(255)
  Area            String? @db.VarChar(255)
  NumeroDocumento String? @db.VarChar(255)
  Modulos         String? @db.MediumText
  Profesion       String? @db.MediumText
  CodBar          String? @db.VarChar(255)
  FechaNacimiento String? @db.VarChar(255)
  Cargo           String? @db.VarChar(255)
  Departamento    String? @db.VarChar(255)
  PathImg1        String? @db.MediumText
  PathFirma       String? @db.LongText
  Codigo          String? @db.VarChar(50)
}

model tbleclipses {
  IdTipo  Int     @id @default(autoincrement())
  Eclipse String? @db.VarChar(50)
  TIpo    String? @db.VarChar(255)
}

model tblfaseslunares {
  id      Int       @id @default(autoincrement())
  Fecha   DateTime? @db.DateTime(0)
  Luna    Int?      @db.TinyInt
  Eclipse Int?      @db.TinyInt
}

model tblfestivos {
  Id         Int       @id @default(autoincrement())
  Dia        DateTime? @db.DateTime(0)
  Festividad String?   @db.VarChar(50)
}

model tbllunas {
  Id     Int     @id @default(autoincrement())
  idLuna Int?    @db.TinyInt
  Luna   String? @db.VarChar(50)
}

model tblnotas {
  Id   Int       @id @default(autoincrement())
  Dia  DateTime? @db.DateTime(0)
  Hora Int?      @db.TinyInt
  Nota String?   @db.VarChar(255)
}

model Santoral {
  Id         Int     @id @default(autoincrement())
  Dia        Int?    @db.TinyInt
  Mes        Int?    @db.TinyInt
  Festividad String? @db.VarChar(255)
}

model team_invitations {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  teamId     BigInt    @db.UnsignedBigInt
  email      String    @db.VarChar(255)
  role       String?   @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  teams      Team      @relation(fields: [teamId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "team_invitations_teamId_foreign")

  @@unique([teamId, email], map: "team_invitations_teamId_email_unique")
}

model TeamUser {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  teamId     BigInt    @db.UnsignedBigInt
  userId     BigInt    @db.UnsignedBigInt
  role       String?   @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@unique([teamId, userId], map: "team_user_teamId_userId_unique")
}

model Team {
  Id              BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  userId           BigInt           @db.UnsignedBigInt
  name             String           @db.VarChar(255)
  personal_team    Boolean
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  team_invitations TeamInvitation[]

  @@index([userId], map: "teams_userId_index")
}

model UserType {
  Id         String    @id @db.Char(26)
  name       String    @unique(map: "user_types_name_unique") @db.VarChar(100)
  deleted_at DateTime? @db.Timestamp(0)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  patient    Patient[]
}

model User {
  Id                       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                      String    @db.VarChar(255)
  email                     String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at         DateTime? @db.Timestamp(0)
  password                  String    @db.VarChar(255)
  two_factor_secret         String?   @db.Text
  two_factor_recovery_codes String?   @db.Text
  two_factor_confirmed_at   DateTime? @db.Timestamp(0)
  remember_token            String?   @db.VarChar(100)
  current_teamId            BigInt?   @db.UnsignedBigInt
  profile_photo_path        String?   @db.VarChar(2048)
  created_at                DateTime? @db.Timestamp(0)
  updated_at                DateTime? @db.Timestamp(0)
}

enum appointment_events_rendering {
  EMPTY_ENUM_VALUE   @map("")
  background
  inverse_background @map("inverse-background")
}

enum PatientMeasureAge {
  Dias // 1 @map("1")
  Meses // 2 @map("2")
  Anios // 3 @map("3")
}

enum PatientGenre {
  F
  M
}

enum PatientHomeArea {
  U
  R
}

enum ConsultationsStatus {
  Scheduled
  Attended
  Post_Scheduled @map("Post-Scheduled")
  Cancelled
  Not_Attended   @map("Not Attended")
}
