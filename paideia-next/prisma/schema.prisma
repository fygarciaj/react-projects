generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_MEGASALUD_URL")
}

model AppointmentEvent {
  id               String                       @id @default(uuid())
  appointmentId    String                       @unique
  appointment      Appointment                  @relation(fields: [appointmentId], references: [id])
  title            String                       @unique @db.VarChar(255)
  allDay           Boolean                      @default(false)
  start            DateTime                     @db.DateTime(0)
  end              DateTime                     @db.DateTime(0)
  url              String?                      @default("") @db.VarChar(255)
  className        String?                      @default("") @db.VarChar(255)
  editable         Boolean                      @default(true)
  startEditable    Boolean                      @default(true)
  durationEditable Boolean                      @default(true)
  resourceEditable Boolean                      @default(true)
  rendering        appointment_events_rendering @default(background)
  overlap          Boolean                      @default(true)
  constraint       String?                      @db.VarChar(255)
  source           Json?
  color            String                       @default("#0508ff") @db.VarChar(255)
  backgroundColor  String                       @default("#cccccc") @db.VarChar(255)
  borderColor      String                       @default("#fff") @db.VarChar(255)
  textColor        String                       @default("#000") @db.VarChar(255)
  clinicId         String?                      @default("1") @db.Char(26)
  uuid             String                       @unique(map: "appointment_events_uuid_unique") @db.Char(26)
  deletedAt        DateTime?                    @db.Timestamp(0)
  createdAt        DateTime?                    @db.Timestamp(0)
  updatedAt        DateTime?                    @db.Timestamp(0)
  // Relation 1-1 with patient
  patientId        String
  patient          Patient                      @relation(fields: [patientId], references: [id])

  @@index([id])
  @@index([end])
  @@index([start])
  @@index([end, start])
}

model AppointmentState {
  id            String       @id @default(uuid())
  state         String       @unique() @db.VarChar(255)
  createdAt     DateTime?    @default(now())
  updatedAt     DateTime?    @db.Timestamp(0)
  Appointment   Appointment? @relation(fields: [appointmentId], references: [id])
  appointmentId String?

  @@index([id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Appointment {
  id                     String                 @id @default(uuid())
  appointmentDate        DateTime               @default(now())
  event                  AppointmentEvent?
  patient                Patient[]
  consultationId         BigInt?                @db.UnsignedBigInt
  healtProviderCompanyId HealtProviderCompany[]
  appointmentState       AppointmentState[]
  contactPhone           String                 @db.VarChar(255)
  consultationReason     String                 @db.VarChar(255)
  doctorId               BigInt                 @db.UnsignedBigInt
  orderAttention         Int
  dateAttention          DateTime?              @db.DateTime(0)
  areaId                 BigInt?                @db.UnsignedBigInt
  dxPrincipalId          BigInt?                @db.UnsignedBigInt
  ripsId                 BigInt?                @db.UnsignedBigInt
  clinicId               BigInt?                @db.UnsignedBigInt
  appointmentValue       Decimal?               @db.Decimal(18, 2)
  payCopay               Boolean                @default(false)
  copayCalue             Decimal?               @db.Decimal(13, 2)
  deletedAt              DateTime               @default(now())
  createdAt              DateTime?              @db.Timestamp(0)
  updatedAt              DateTime?              @db.Timestamp(0)

  @@index([id])
  @@index([appointmentDate])
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique() @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @db.Timestamp(0)

  @@index([id])
}

model City {
  id               String    @id @default(uuid())
  dptoCode         String    @db.VarChar(2)
  cityCode         String    @db.VarChar(5)
  centerPeopleCode String    @unique() @db.VarChar(8)
  dptoName         String    @db.VarChar(100)
  cityName         String    @db.VarChar(100)
  centerPeopleName String    @db.VarChar(100)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @db.Timestamp(0)
  clinics          Clinic[]
  offices          Office[]
  patients         Patient[]

  @@index([id])
  @@index([centerPeopleName])
  @@index([cityCode])
  @@index([cityName])
  @@index([dptoCode])
  @@index([dptoName])
}

model Clinic {
  id                   String    @id @default(uuid())
  names                String    @unique() @db.VarChar(100)
  identificationNumber String    @unique() @db.VarChar(20)
  address              String?   @db.VarChar(100)
  phone                String?   @db.VarChar(20)
  cityId               String    @db.Char(26)
  regimen              String?   @db.VarChar(50)
  legalRepresentative  String?   @db.VarChar(100)
  deletedAt            DateTime? @default(now())
  createdAt            DateTime? @db.Timestamp(0)
  updatedAt            DateTime? @db.Timestamp(0)
  cities               City?     @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  patients             Patient[]

  @@index([cityId])
}

model Consultation {
  id                      String        @id @default(uuid())
  consultationDate        DateTime      @db.DateTime(0)
  attentionDate           DateTime      @db.DateTime(0)
  patientId               String        @db.Char(26)
  factureId               Int           @db.UnsignedInt
  cupsId                  String        @db.Char(26)
  autoritation            String        @db.VarChar(255)
  consultationMotiv       String        @db.Text
  questionsInterest       String        @db.Text
  antecedentes            String        @db.Text
  physicalExam            String        @db.Text
  temperature             Decimal       @db.Decimal(3, 1)
  arterialTension_TA      String        @db.VarChar(255)
  heartRate_FC            Int
  lungFrequency_FP        Int
  respiratoryFrequency_FR Int
  size_T                  Int
  weight                  String        @db.VarChar(255)
  head                    String        @db.Text
  orl                     String        @db.Text
  neck                    String        @db.Text
  thorax                  String        @db.Text
  lungs                   String        @db.Text
  headVesselsBlood        String        @db.Text
  abdomen                 String        @db.Text
  genitalia               String        @db.Text
  musculoSkeletal         String        @db.Text
  nervousSystem           String        @db.Text
  externalCauseId         String        @db.VarChar(255)
  dxMainId                Int           @db.UnsignedInt
  dxRelacted1Id           Int?          @db.UnsignedInt
  dxRelated2Id            Int?          @db.UnsignedInt
  dxRelated3Id            Int?          @db.UnsignedInt
  dxMainTypeId            Int           @db.UnsignedInt
  consultationValue       Decimal       @db.Decimal(15, 3)
  moderatorQuota          Decimal       @db.Decimal(15, 3)
  status                  ConsultaState
  deletedAt               DateTime?     @default(now())
  createdAt               DateTime?     @db.Timestamp(0)
  updatedAt               DateTime?     @db.Timestamp(0)
  cups                    Cups          @relation(fields: [cupsId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "consultations_cupsId_foreign")
  patients                Patient       @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "consultations_patientId_foreign")

  @@index([attentionDate])
  @@index([autoritation])
  @@index([consultationDate])
  @@index([cupsId])
  @@index([dxMainId])
  @@index([dxRelacted1Id])
  @@index([dxRelated2Id])
  @@index([dxRelated3Id])
  @@index([externalCauseId])
  @@index([factureId])
  @@index([patientId])
}

model Cups {
  id             String         @id @default(uuid())
  code           String         @unique() @db.Char(6)
  description    String         @db.VarChar(255)
  value          Decimal?       @db.Decimal(15, 3)
  isConsultation Boolean
  deletedAt      DateTime?      @default(now())
  createdAt      DateTime?      @db.Timestamp(0)
  updatedAt      DateTime?      @db.Timestamp(0)
  Consultation   Consultation[]

  @@index([id])
  @@index([code])
  @@index([description])
}

model Doctor {
  id                   String            @id @default(uuid())
  identificationTypeId String
  identification       String            @unique @db.VarChar(255)
  doctorCode           String            @unique @db.VarChar(255)
  firstName            String            @db.VarChar(255)
  secondName           String?           @db.VarChar(255)
  firstSurname         String            @db.VarChar(255)
  secondSurname        String?           @db.VarChar(255)
  email                String?           @unique @db.VarChar(255)
  professionalCard     String            @unique @db.VarChar(255)
  movil1               String?           @db.VarChar(255)
  movil2               String?           @db.VarChar(255)
  receiveNotifications Boolean           @default(true)
  active               Boolean           @default(true)
  deletedAt            DateTime?         @db.Timestamp(0)
  createdAt            DateTime?         @db.Timestamp(0)
  updatedAt            DateTime?         @db.Timestamp(0)
  DoctorSpecialty      DoctorSpecialty[]
}

model Specialty {
  id              String            @id @default(uuid())
  name            String            @unique() @db.VarChar(255)
  doctorSpecialty DoctorSpecialty[]
  deletedAt       DateTime?         @db.Timestamp(0)
  createdAt       DateTime?         @db.Timestamp(0)
  updatedAt       DateTime?         @db.Timestamp(0)

  @@index([id])
}

model DoctorSpecialty {
  id          String    @id @default(uuid())
  specialtyId String    @db.Char(26)
  doctorId    String    @db.Char(26)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @db.Timestamp(0)
  doctor      Doctor    @relation(fields: [doctorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "doctor_specialty_doctorId_foreign")
  specialties Specialty @relation(fields: [specialtyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "doctor_specialty_specialtyId_foreign")

  @@index([doctorId])
  @@index([specialtyId])
}

model Enterprise {
  id                   String    @id @default(uuid())
  tipoIdentificacionId String
  numeroIdentificacion String    @unique(map: "empresas_numeroIdentificacion_unique") @db.VarChar(255)
  nombre_empresa       String    @unique(map: "empresas_nombre_empresa_unique") @db.VarChar(255)
  direccion            String?   @db.VarChar(255)
  telefonos            String?   @db.VarChar(255)
  tipo_persona         String    @default("N") @db.VarChar(255)
  prefijo_factura      String    @default("") @db.VarChar(255)
  consecutivo_factura  BigInt    @default(1)
  codigo_entidad       BigInt
  deletedAt            DateTime? @db.Timestamp(0)
  createdAt            DateTime? @default(now())
  updatedAt            DateTime? @db.Timestamp(0)
}

model ReportPrint {
  id         String    @id @default(uuid())
  title1     String?   @db.MediumText
  title2     String?   @db.MediumText
  title3     String?   @db.MediumText
  text       String?   @db.MediumText
  entities   String?   @db.MediumText
  reportType String?   @db.MediumText
  reportDate DateTime? @db.DateTime(0)
  doctor     String?
}

model ExternalCause {
  id        String    @id @default(uuid())
  code      String    @unique() @db.VarChar(2)
  name      String    @unique() @db.VarChar(60)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model HealtProviderCompany {
  id                       String        @id @default(uuid())
  identificationNumber     String        @unique() @db.VarChar(255)
  name                     String        @unique() @db.VarChar(255)
  citie                    String?
  address                  String?
  phone                    String?
  daysForPayment           Int           @default(0)
  copayment                Decimal       @default(0.00) @db.Decimal(8, 2)
  expiration               Int           @default(0)
  paymentMethodId          String        @db.Char(26)
  isHealtProviderCompany   Boolean       @default(true)
  codigoPrestadora         String?       @db.VarChar(255)
  moderatorQuota           Decimal       @default(0.00) @db.Decimal(8, 2)
  withCopayment            Boolean       @default(false)
  withModerador            Boolean       @default(false)
  withAdvancePayment       Boolean       @default(false)
  withModeratorAnticipated Boolean       @default(false)
  contract                 String?       @db.VarChar(255)
  identificationCountCobro String?       @db.VarChar(255)
  active                   Boolean       @default(true)
  deletedAt                DateTime?     @db.Timestamp(0)
  createdAt                DateTime?     @default(now())
  updatedAt                DateTime?     @db.Timestamp(0)
  paymentMethod            PaymentMethod @relation(fields: [paymentMethodId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "healt_provider_companies_payment_methodId_foreign")
  patient                  Patient[]
  Appointment              Appointment?  @relation(fields: [appointmentId], references: [id])
  appointmentId            String?

  @@index([id])
  @@index([identificationNumber])
  @@index([address])
  @@index([codigoPrestadora])
  @@index([paymentMethodId])
}

model IdentificationType {
  id        String    @id @default(uuid())
  code      String    @unique() @db.Char(3)
  name      String    @unique() @db.VarChar(255)
  deletedAt DateTime? @db.Timestamp(0)
  createdAt DateTime? @db.Timestamp(0)
  updatedAt DateTime? @db.Timestamp(0)
  patient   Patient[]
}

model InstitutionProviderServices {
  id                     String    @id @default(uuid())
  identificationTypeId   String    @db.Char(26)
  ipsCode                String    @unique() @db.VarChar(10)
  nitIps                 String?   @db.VarChar(20)
  name                   String    @unique() @db.VarChar(60)
  cityId                 String?   @default("2587") @db.Char(26)
  address                String?   @db.VarChar(255)
  phone                  String?   @db.VarChar(255)
  term                   Int       @default(0)
  copayment              Decimal   @default(0.00) @db.Decimal(8, 2)
  expire                 Int       @default(0)
  paymentMethodId        String    @default("1") @db.Char(26)
  isHealtProviderService Boolean   @default(true)
  active                 Boolean   @default(true)
  codigoPrestadora       String?   @db.VarChar(255)
  moderatorFee           Decimal   @default(0.00) @db.Decimal(8, 2)
  chargesCopayment       Boolean   @default(false)
  chargesCoderator       Boolean   @default(false)
  advanceCopayment       Boolean   @default(false)
  advanceModerator       Boolean   @default(false)
  contrat                String?   @db.VarChar(255)
  nitCountCharges        String?   @db.VarChar(255)
  deletedAt              DateTime? @db.Timestamp(0)
  createdAt              DateTime? @default(now())
  updatedAt              DateTime? @db.Timestamp(0)

  @@index([id])
  @@index([address])
  @@index([codigoPrestadora])
}

model MaritalStatus {
  id        String    @id @default(uuid())
  code      String    @db.VarChar(255)
  name      String    @unique() @db.VarChar(255)
  deletedAt DateTime? @db.Timestamp(0)
  createdAt DateTime? @db.Timestamp(0)
  updatedAt DateTime? @db.Timestamp(0)
  patient   Patient[]

  @@index([id])
  @@index([code])
}

model Media {
  id                   String    @id @default(uuid())
  modelType            String    @db.VarChar(255)
  modelId              BigInt    @db.UnsignedBigInt
  collectionName       String    @db.VarChar(255)
  name                 String    @db.VarChar(255)
  fileName             String    @db.VarChar(255)
  mimeType             String?   @db.VarChar(255)
  disk                 String    @db.VarChar(255)
  conversionsDisk      String?   @db.VarChar(255)
  size                 BigInt    @db.UnsignedBigInt
  manipulations        Json
  customProperties     Json
  generatedConversions Json
  responsiveImages     Json
  orderColumn          Int?      @db.UnsignedInt
  createdAt            DateTime? @db.Timestamp(0)
  updatedAt            DateTime? @db.Timestamp(0)

  @@index([modelType, modelId])
  @@index([orderColumn])
}

model Occupation {
  id                    String    @id @default(uuid())
  ciuoCode              String    @db.Char(4)
  occupationDescription String    @unique() @db.VarChar(255)
  risk                  Int       @default(1)
  deletedAt             DateTime? @db.Timestamp(0)
  createdAt             DateTime? @default(now())
  updatedAt             DateTime? @db.Timestamp(0)
  patient               Patient[]

  @@index([id])
  @@index([ciuoCode])
}

model Office {
  id                   String    @id @default(uuid())
  names                String    @unique() @db.VarChar(255)
  identificationNumber String    @unique() @db.VarChar(255)
  address              String    @db.VarChar(255)
  phone                String    @db.VarChar(255)
  cityId               String    @db.Char(26)
  regimen              String    @db.VarChar(255)
  ceoOffice            String    @db.VarChar(255)
  createdAt            DateTime? @db.Timestamp(0)
  updatedAt            DateTime? @db.Timestamp(0)
  cities               City[]

  @@index([id])
  @@index([cityId])
}

model Patient {
  id                     String                @id @default(uuid())
  identificationTypeId   String                @db.Char(26)
  identificationNumber   String                @unique() @db.VarChar(20)
  firstSurname           String                @db.VarChar(30)
  secondSurname          String?               @db.VarChar(30)
  firstName              String                @db.VarChar(30)
  secondName             String?               @db.VarChar(30)
  fullName               String?               @db.VarChar(150)
  healtProviderCompanyId String                @db.Char(26)
  userTypeId             String                @db.Char(26)
  affiliateTypeId        String                @db.Char(26)
  father                 String?               @db.VarChar(255)
  mother                 String?               @db.VarChar(255)
  companion              String?               @db.VarChar(255)
  maritalStatusId        String                @db.Char(26)
  occupationId           String                @db.Char(26)
  dateBirth              DateTime?             @default(dbgenerated("'1900-01-01'")) @db.Date
  measureAge             Int?                  @default(dbgenerated("1"))
  genre                  PatientGenre
  homeArea               PatientHomeArea
  cityId                 String                @db.Char(26)
  email                  String?               @db.VarChar(100)
  contact                String?               @db.VarChar(100)
  active                 Boolean?              @default(true)
  clinicId               String                @db.Char(26)
  observations           String?               @db.Text
  addressPatient         AdrressesOfPatients[]
  consultations          Consultation[]
  affiliateType          AffiliateType         @relation(fields: [affiliateTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cities                 City                  @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  clinics                Clinic                @relation(fields: [clinicId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  healtProviderCompany   HealtProviderCompany  @relation(fields: [healtProviderCompanyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  identificationType     IdentificationType    @relation(fields: [identificationTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  maritalStatus          MaritalStatus         @relation(fields: [maritalStatusId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  occupations            Occupation            @relation(fields: [occupationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userType               UserType              @relation(fields: [userTypeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  phonePatient           PhonePatient[]
  AppointmentEvent       AppointmentEvent[]
  Appointment            Appointment?          @relation(fields: [appointmentId], references: [id])
  appointmentId          String?
  deletedAt              DateTime?             @db.Timestamp(0)
  createdAt              DateTime?             @default(now())
  updatedAt              DateTime?             @db.Timestamp(0)

  @@index([id])
  @@index([affiliateTypeId])
  @@index([cityId])
  @@index([clinicId])
  @@index([healtProviderCompanyId])
  @@index([identificationTypeId])
  @@index([maritalStatusId])
  @@index([occupationId])
  @@index([userTypeId])
}

model PaymentMethod {
  id                   String                 @id @default(uuid())
  name                 String                 @db.VarChar(255)
  expirationDays       Int                    @default(0)
  deletedAt            DateTime?              @db.Timestamp(0)
  createdAt            DateTime?              @default(now())
  updatedAt            DateTime?              @db.Timestamp(0)
  HealtProviderCompany HealtProviderCompany[]
}

model PersonalAccessToken {
  id            String    @id @default(uuid())
  tokenableType String    @db.VarChar(255)
  tokenableId   BigInt    @db.UnsignedBigInt
  name          String    @db.VarChar(255)
  token         String    @unique() @db.VarChar(64)
  abilities     String?   @db.Text
  lastUsedAt    DateTime? @db.Timestamp(0)
  expiresAt     DateTime? @db.Timestamp(0)
  createdAt     DateTime? @db.Timestamp(0)
  updatedAt     DateTime? @db.Timestamp(0)

  @@index([tokenableType, tokenableId])
}

model Phone {
  id            String         @id @default(uuid())
  number        String         @db.VarChar(255)
  deletedAt     DateTime?      @db.Timestamp(0)
  createdAt     DateTime?      @db.Timestamp(0)
  updatedAt     DateTime?      @db.Timestamp(0)
  phonesPatient PhonePatient[]
}

model PhonePatient {
  id        String    @id @default(uuid())
  patientId String    @db.Char(26)
  phoneId   String    @db.Char(26)
  deletedAt DateTime? @db.Timestamp(0)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @db.Timestamp(0)
  patient   Patient   @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "phones_patients_patientId_foreign")
  phone     Phone     @relation(fields: [phoneId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "phones_patients_phoneId_foreign")

  @@index([id])
  @@index([patientId])
  @@index([phoneId])
}

model Products {
  id        String    @id @default(uuid())
  name      String    @unique() @db.VarChar(255)
  cost      Decimal?  @db.Decimal(15, 3)
  price     Decimal   @default(0.000) @db.Decimal(15, 3)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @db.Timestamp(0)
}

model Sessions {
  id            String  @id @default(uuid())
  userId        BigInt? @db.UnsignedBigInt
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([userId], map: "sessions_userId_index")
}

model Area {
  Id           Int     @id @default(autoincrement())
  Area         String? @db.VarChar(255)
  Departamento String? @db.VarChar(255)
  Codigo       String? @db.VarChar(255)
}

model tablaareasusuarios {
  Id              Int     @id @default(autoincrement())
  NumeroDocumento String? @db.VarChar(255)
  AreasUsuario    String? @db.VarChar(255)
}

model tablacitas {
  Id               Int       @id @default(autoincrement())
  Fecha            DateTime? @db.DateTime(0)
  Hora             String?   @db.VarChar(255)
  NumeroDocumento  String?   @db.VarChar(255)
  Paciente         String?   @db.VarChar(255)
  Entidad          String?   @db.VarChar(255)
  Telefono         String?   @db.VarChar(255)
  Observaciones    String?   @db.VarChar(255)
  IdMedico         String?   @db.VarChar(255)
  Estado           String?   @db.VarChar(255)
  Evento           String?   @db.MediumText
  ValorEvento      Decimal?  @db.Decimal(11, 2)
  NumeroHistoria   String?   @db.VarChar(255)
  Turno            Int?
  DiaLock          Int?      @db.SmallInt
  FormaPago        String?   @db.MediumText
  ValorCuotaMod    String?   @db.VarChar(20)
  IdPrestador      String?   @db.MediumText
  FechaHraSolicita DateTime? @db.DateTime(0)
  FechaHraAtiende  DateTime? @db.DateTime(0)
  Area             String?   @db.MediumText
  DxPrincipal      String?   @db.MediumText
  IdRIPS           String?   @db.VarChar(100)
  Consultorio      String?   @db.VarChar(5)
}

model tablaconfhorarios {
  Id         Int     @id @default(autoincrement())
  DiaSemana  String? @db.VarChar(255)
  HraIniM    String? @db.VarChar(255)
  HraFinT    String? @db.VarChar(255)
  HraIniT    String? @db.VarChar(255)
  HraFinM    String? @db.VarChar(255)
  IdTratante String? @db.VarChar(255)

  @@index([IdTratante], map: "IdTratante")
}

model tablaconfighorario {
  Id             Int     @id @default(autoincrement())
  IntervaloCitas Int?
  HraIni         String? @db.VarChar(255)
  HraFIN         String? @db.VarChar(255)
  citasXdia      Int
}

model tablaconsultas {
  Indices          Int       @id @default(autoincrement())
  NumeroHistoria   String?   @db.VarChar(255)
  NumeroConsulta   String?   @db.VarChar(255)
  NumeroDocumento  String?   @db.VarChar(255)
  FechaConsulta    DateTime? @db.DateTime(0)
  MotivoConsulta   String?   @db.MediumText
  EnfermedadActual String?   @db.MediumText
  Examenes         String?   @db.MediumText
  Plan             String?   @db.MediumText
  Tratamiento      String?   @db.MediumText
  ExamenFisico     String?   @db.MediumText
  DxPrincipal      String?   @db.MediumText
  dx1              String?   @db.MediumText
  dx2              String?   @db.MediumText
  dx3              String?   @db.MediumText
  Diagnosticos     String?   @db.MediumText
  TA               String?   @db.VarChar(255)
  FC               String?   @db.VarChar(255)
  FR               String?   @db.VarChar(255)
  Peso             String?   @db.VarChar(255)
  Talla            String?   @db.VarChar(255)
  RevisionXsistema String?   @db.MediumText
  Paraclinicos     String?   @db.MediumText
  Analisis         String?   @db.MediumText
  FUM              String?   @db.VarChar(255)
  bloqueada        String?   @db.VarChar(255)

  @@index([Indices], map: "Indices")
}

model tablacups {
  Id                 Int     @id @default(autoincrement())
  Codigo             String? @db.VarChar(6)
  Nombre             String? @db.VarChar(255)
  Sexo               String? @db.VarChar(1)
  Edad_ini           String? @db.VarChar(4)
  Edad_fin           String? @db.VarChar(4)
  archivo            String? @db.VarChar(3)
  Qx                 String? @db.VarChar(1)
  Tipo_procedimiento String? @db.VarChar(255)
  No_minimo          String? @db.VarChar(2)
  No_maximo          String? @db.VarChar(2)
  Finalidad          String? @db.VarChar(2)
  Dx_requerido       String? @db.VarChar(2)
  Edad_Inicial_dias  String? @db.VarChar(10)
  Edad_final_dias    String? @map("Edad-final-dias") @db.VarChar(10)
  POS                String? @db.VarChar(1)
  favorito           String? @db.VarChar(10)

  @@index([Codigo], map: "Codigo")
}

model tabladetallesfacturas {
  id            Int     @id @default(autoincrement())
  NumeroFactura Int?
  CodigoEvento  String? @db.VarChar(255)
  Detalle       String? @db.VarChar(255)
  Cantidad      Int?
  ValorUnitario Int?
  Copago        Int?
  Prefijo       String? @db.VarChar(50)
  CodMedico     String? @db.VarChar(100)

  @@index([NumeroFactura], map: "NumeroFactura")
}

model tabladian {
  Id               Int      @id @default(autoincrement())
  Tipo             String?  @db.MediumText
  Resolucion       String?  @db.MediumText
  Fecha            DateTime @db.Date
  Desde            Int
  Hasta            Int
  Texto1           String?  @db.MediumText
  Texto2           String?  @db.MediumText
  Regimen          String?  @db.MediumText
  FechaVencimiento DateTime @db.Date
  Prefijo          String?  @db.VarChar(10)
  habilitaautoriza String?  @db.VarChar(50)
}

model tablaencabezadosfa {
  Id          Int     @id @default(autoincrement())
  Texto1      String? @db.MediumText
  Texto2      String? @db.MediumText
  Texto3      String? @db.MediumText
  Texto4      String? @db.MediumText
  Texto5      String? @db.MediumText
  Texto6      String? @db.MediumText
  Texto7      String? @db.MediumText
  IdMedico    String? @db.VarChar(255)
  Logo        Bytes?  @db.MediumBlob
  FirmaMedico Bytes?  @db.MediumBlob
  PieFirma    String? @db.VarChar(255)
}

model tablaentidades {
  Id                 Int     @id @default(autoincrement())
  CodigoEntidad      String? @db.VarChar(255)
  DescripcionEntidad String? @db.MediumText
  Nit                String? @db.VarChar(255)
  Direccion          String? @db.VarChar(255)
  Telefonos          String? @db.VarChar(255)
}

model tablaeventos {
  Id         Int     @id @default(autoincrement())
  Eventos    String? @db.VarChar(255)
  codigoCUPS String? @db.VarChar(50)
  RIPS       String? @db.VarChar(50)
}

model tablafacturas {
  Id                 Int       @id @default(autoincrement())
  Prefijo            String?   @db.VarChar(10)
  NumeroFactura      Int?      @db.SmallInt
  FechaFactura       DateTime  @db.Date
  NombreCliente      String?   @db.MediumText
  Direccion          String?   @db.MediumText
  Observaciones      String?   @db.MediumText
  NumeroDocumento    String?   @db.VarChar(255)
  Telefono           String?   @db.VarChar(255)
  Procesada          String?   @db.VarChar(4)
  FechaProceso       DateTime  @db.Date
  Ciudad             String?   @db.VarChar(255)
  Resolucion         String?   @db.MediumText
  Estadofactura      String?   @db.VarChar(255)
  NumeroDocPaciente  String?   @db.VarChar(255)
  NombrePaciente     String?   @db.VarChar(255)
  NumeroAutorizacion String?   @db.VarChar(255)
  Admision           String?   @db.VarChar(255)
  TipoAfiliacion     String?   @db.VarChar(255)
  Medico             String?   @db.VarChar(255)
  fchvencimiento     DateTime  @db.Date
  TipoFactura        String?   @db.VarChar(255)
  Municipio          String?   @db.MediumText
  FechaRadicado      DateTime  @db.Date
  FechaIni           DateTime? @db.Date
  FechaFin           DateTime? @db.Date
  TipoDocPaciente    String?   @db.VarChar(2)
  usuario            String?   @db.VarChar(50)
  IdTratante         String?   @db.VarChar(50)
  CodMedico          String?   @db.VarChar(100)

  @@index([NumeroFactura], map: "NumeroFactura")
}

model tablafestivos {
  Id         Int     @id @default(autoincrement())
  IdMedico   String  @db.Text
  Dia        String? @db.VarChar(255)
  Mes        String? @db.VarChar(255)
  Festividad String? @db.VarChar(50)
  A_o        Int?    @map("Año")
}

model tablahistorias {
  Id                 Int       @id @default(autoincrement())
  NumeroHistoria     String?   @db.VarChar(255)
  FechaNacimiento    DateTime? @db.DateTime(0)
  FechaHistoria      DateTime? @db.DateTime(0)
  Empresa            String?   @db.VarChar(255)
  OCUPACION          String?   @db.MediumText
  Direcci_n          String?   @map("Dirección") @db.MediumText
  Tel_fonos          String?   @map("Teléfonos") @db.VarChar(30)
  EC                 String?   @db.VarChar(255)
  TipoDocumento      String?   @db.VarChar(255)
  NumeroDocumento    String?   @db.VarChar(255)
  CodigoEntidad      String?   @db.VarChar(255)
  TipoUsuario        String?   @db.VarChar(255)
  PrimerApellido     String?   @db.VarChar(255)
  SegundoApellido    String?   @db.VarChar(255)
  PrimerNombre       String?   @db.VarChar(255)
  SegundoNombre      String?   @db.MediumText
  Edad               String?   @db.VarChar(255)
  UnidadMedidaEdad   String?   @db.VarChar(255)
  Sexo               String?   @db.VarChar(255)
  CodigoDtoMunicipio String?   @db.VarChar(255)
  ZonaUrbana         String?   @db.VarChar(255)
  CodMedico          String?   @db.VarChar(255)
  PathIMG1           String?   @db.MediumText
  Email              String?   @db.VarChar(255)
  IdMedico           String?   @db.VarChar(255)
  ZonaUrbana1        String?   @db.VarChar(255)
  CodMedico1         String?   @db.VarChar(255)
  PathIMG11          String?   @db.MediumText
  Email1             String?   @db.VarChar(255)
  Observaciones      String?   @db.MediumText
  Acompa_ante        String?   @map("Acompañante") @db.VarChar(255)
  Parentezco         String?   @db.VarChar(255)
  SedeCodigoEntidad  String?   @db.VarChar(100)
}

model tablahistorias_old {
  Id                 Int       @id @default(autoincrement())
  NumeroHistoria     String?   @unique(map: "NumeroHistoria_2") @db.VarChar(255)
  FechaNacimiento    DateTime? @db.Date
  FechaHistoria      DateTime? @db.DateTime(0)
  Empresa            String?   @db.VarChar(255)
  OCUPACION          String?   @db.MediumText
  Direcci_n          String?   @map("Dirección") @db.MediumText
  Tel_fonos          String?   @map("Teléfonos") @db.VarChar(30)
  EC                 String?   @db.VarChar(255)
  TipoDocumento      String?   @db.VarChar(255)
  NumeroDocumento    String?   @unique(map: "NumeroDocumento") @db.VarChar(255)
  CodigoEntidad      String?   @db.VarChar(255)
  TipoUsuario        String?   @db.VarChar(255)
  PrimerApellido     String?   @db.VarChar(255)
  SegundoApellido    String?   @db.VarChar(255)
  PrimerNombre       String?   @db.VarChar(255)
  SegundoNombre      String?   @db.MediumText
  Edad               String?   @db.VarChar(255)
  UnidadMedidaEdad   String?   @db.VarChar(255)
  Sexo               String?   @db.VarChar(255)
  CodigoDtoMunicipio String?   @db.VarChar(255)
  ZonaUrbana         String?   @db.VarChar(255)
  CodMedico          String?   @db.VarChar(255)
  PathIMG1           String?   @db.MediumText
  Email              String?   @db.VarChar(255)
  IdMedico           String?   @db.VarChar(255)
  Email1             String?   @db.VarChar(255)
  Observaciones      String?   @db.LongText
  sedecodigoentidad  String?   @db.VarChar(150)
  informante         String?   @db.VarChar(255)
  parentesco         String?   @db.VarChar(255)
  edadInformante     String?   @db.VarChar(10)

  @@index([CodigoEntidad], map: "CodigoEntidad")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablainsumos {
  Id             Int       @id @default(0)
  NumeroHistoria String?   @db.VarChar(255)
  FechaInsumo    DateTime? @db.DateTime(0)
  Insumo         String?   @db.VarChar(255)
  Cantidad       Float?
  Valor          Float?
}

model tablameses {
  Id        Int     @id @default(autoincrement())
  DiaN      Int?
  DiaNombre String? @db.VarChar(255)
}

model tablanotasagenda {
  Id   Int       @id @default(autoincrement())
  Dia  DateTime? @db.DateTime(0)
  Hora Int?      @db.TinyInt
  Nota String?   @db.VarChar(255)
}

model tablapacxentidad {
  Id            Int     @id @default(autoincrement())
  IdMedico      String? @db.VarChar(255)
  CodigoEntidad String? @db.VarChar(255)
  Lunes         Int?
  Martes        Int?
  Mi_rcoles     Int?    @map("Miércoles")
  Jueves        Int?
  Viernes       Int?
  S_bado        Int?    @map("Sábado")
  Domingo       Int?

  @@index([CodigoEntidad], map: "CodigoEntidad")
  @@index([IdMedico], map: "IdMedico")
}

model tablaripsconsultas {
  Id                 Int       @id @default(autoincrement())
  NumeroHistoria     String?   @db.VarChar(255)
  NumFactura         Int?
  IdMedico           String?   @db.VarChar(50)
  CodigoMedico       String?   @db.VarChar(50)
  CodigoEntidad      String?   @db.VarChar(255)
  sedecodigo         String?   @db.MediumText
  SedeCodigoEntidad  String?   @db.VarChar(255)
  TipoIdentificacion String?   @db.VarChar(2)
  NumeroDocumento    String?   @db.VarChar(255)
  Fecha              DateTime? @db.DateTime(0)
  NumAutorizacion    String?   @db.VarChar(15)
  CodConsulta        String?   @db.VarChar(8)
  FinalidadConsulta  String?   @db.VarChar(2)
  CausaExterna       String?   @db.VarChar(2)
  DxPrincipal        String?   @db.VarChar(4)
  DxRel1             String?   @db.VarChar(4)
  DxRel2             String?   @db.VarChar(4)
  DxRel3             String?   @db.VarChar(4)
  TipoDxPrincipal    String?   @db.VarChar(1)
  ValorC             Float?
  ValorCuotaMod      Float?
  ValorNeto          Float?
  Orden              Int?
  EstadoFactura      String?   @db.VarChar(11)
  prefijo            String?   @db.VarChar(50)
  IdRIPS             String?   @db.VarChar(20)
  Edad               String?   @db.VarChar(50)
  UnidadMedidaEdad   String?   @db.VarChar(10)
  TipoUsuario        String?   @db.VarChar(50)
  idtratante         String?   @db.VarChar(50)

  @@index([CodigoMedico], map: "CodigoMedico")
  @@index([IdMedico], map: "IdMedico")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablaripsmedico {
  Id              Int     @id @default(autoincrement())
  CodigoMedico    String  @default("") @db.VarChar(255)
  NombreMedico    String? @db.VarChar(255)
  TipoDocumento   String? @db.VarChar(255)
  NumeroDocumento String? @db.VarChar(255)
  CodEspecialidad String? @db.VarChar(255)

  @@index([CodigoMedico], map: "CodigoMedico")
  @@index([NumeroDocumento], map: "NumeroDocumento")
}

model tablaripsproc {
  Id                         Int       @id @default(autoincrement())
  Turno                      Int?
  IdTemp                     Int?
  NumeroHistoria             String?   @db.VarChar(255)
  CodigoEntidad              String?   @db.VarChar(10)
  TipoIdentificacion         String?   @db.VarChar(2)
  NumeroDocumento            String?   @db.VarChar(20)
  Fecha                      DateTime? @db.DateTime(0)
  FechaIni                   DateTime? @db.DateTime(0)
  FechaFin                   DateTime? @db.DateTime(0)
  AmbitoRealizaProcedimiento String?   @db.VarChar(1)
  FinalidadProcedimiento     String?   @db.VarChar(1)
  PersonalQatiende           String?   @db.VarChar(1)
  DxPrincipal                String?   @db.VarChar(4)
  DxRelacionado              String?   @db.VarChar(4)
  Complicacion               String?   @db.VarChar(4)
  FormaRealizQx              String?   @db.VarChar(1)
  IdMedico                   String?   @db.VarChar(255)
  CodigoMedico               String?   @db.VarChar(255)
  NombreMedico               String?   @db.VarChar(255)
  CodigoProfesional          String?   @db.VarChar(255)
  Area                       String?   @db.VarChar(255)
  Tipousuario                String?   @db.VarChar(255)
  NumeroIdUsr                String?   @db.VarChar(255)
  UnidadMedidaEdad           Int?
  Edad                       Int?
  EstadoFactura              String?   @db.VarChar(255)
  SedeCodigoEntidad          String?   @db.VarChar(50)
  IdRIPS                     String?   @db.VarChar(50)
  idtratante                 String?   @db.VarChar(50)
  IdUsuario                  String?   @db.VarChar(50)

  @@index([CodigoEntidad], map: "CodigoEntidad")
  @@index([NumeroDocumento], map: "NumeroDocumento")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablaripsprocdet {
  Id                Int     @id @default(autoincrement())
  IdTemp            Int?
  IdProcedimiento   Float?
  NumeroHistoria    String? @db.VarChar(255)
  SedeCodigoEntidad String? @db.VarChar(10)
  prefijo           String? @db.VarChar(10)
  NumFactura        Int?
  NumAutorizacion   String? @db.VarChar(15)
  CodProcedimiento  String? @db.VarChar(8)
  Orden             Int?
  Cantidad          Float?
  ValorUnitario     Float?
  VUCuotaMod        Float?
  archivo           String? @db.MediumText

  @@index([IdProcedimiento], map: "IdProcedimiento")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablaripsprocedimientos {
  Id                         Int       @id @default(autoincrement())
  NumeroHistoria             String?   @db.VarChar(255)
  NumFactura                 Int?
  CodigoEntidad              String?   @db.VarChar(10)
  TipoIdentificacion         String?   @db.VarChar(2)
  NumeroDocumento            String?   @db.VarChar(20)
  Fecha                      DateTime? @db.Date
  NumAutorizacion            String?   @db.VarChar(15)
  CodProcedimiento           String?   @db.VarChar(8)
  SedeCodigoEntidad          String?   @db.VarChar(255)
  AmbitoRealizaProcedimiento String?   @db.VarChar(1)
  FinalidadProcedimiento     String?   @db.VarChar(1)
  PersonalQatiende           String?   @db.VarChar(1)
  DxPrincipal                String?   @db.VarChar(4)
  DxRelacionado              String?   @db.VarChar(4)
  Complicacion               String?   @db.VarChar(4)
  FormaRealizQx              String?   @db.VarChar(1)
  ValorP                     Float?
  ValorCuotaMod              Float?
  ValorNeto                  Float?
  IdMedico                   String?   @db.VarChar(255)
  CodigoMedico               String?   @db.VarChar(50)
  Orden                      Int?
  EstadoFactura              String?   @db.VarChar(11)

  @@index([NumFactura], map: "NumFactura")
  @@index([NumeroDocumento], map: "NumeroDocumento")
  @@index([NumeroHistoria], map: "NumeroHistoria")
}

model tablasedesentidades {
  id              Int     @id @default(0)
  descripcionSede String? @db.VarChar(255)
  codigoEntidad   String? @db.VarChar(255)
}

model Santoral {
  id         String  @id @default(uuid())
  dia        Int?    @db.TinyInt
  mes        Int?    @db.TinyInt
  festividad String? @db.VarChar(255)
}

model UserType {
  id        String    @id @default(uuid())
  name      String    @unique(map: "user_types_name_unique") @db.VarChar(100)
  deletedAt DateTime? @db.Timestamp(0)
  createdAt DateTime? @db.Timestamp(0)
  updatedAt DateTime? @db.Timestamp(0)
  patient   Patient[]
}

model User {
  id                     String    @id @default(uuid())
  name                   String    @db.VarChar(255)
  email                  String    @unique(map: "users_email_unique") @db.VarChar(255)
  emailVerifiedAt        DateTime? @db.Timestamp(0)
  password               String    @db.VarChar(255)
  twoFactorSecret        String?   @db.Text
  twoFactorRecoveryCodes String?   @db.Text
  twoFactorConfirmedAt   DateTime? @db.Timestamp(0)
  rememberToken          String?   @db.VarChar(100)
  createdAt              DateTime? @default(now())
  updatedAt              DateTime? @db.Timestamp(0)
}

enum appointment_events_rendering {
  EMPTY_ENUM_VALUE   @map("")
  background
  inverse_background @map("inverse-background")
}

enum PatientMeasureAge {
  Dias  @map("1")
  Meses @map("2")
  Anios @map("3")
}

enum PatientGenre {
  Femenino
  Masculino
  Indeterminado
}

enum PatientHomeArea {
  Urbano
  Rural
}

enum ConsultaState {
  Scheduled
  Attended
  PostScheduled @map("Post Scheduled")
  Cancelled
  NotAttended   @map("Not Attended")
}

model Address {
  id        String                @id @default(uuid())
  location  String                @db.VarChar(255)
  deletedAt DateTime?             @db.Timestamp(0)
  createdAt DateTime?             @default(now())
  updatedAt DateTime?             @db.Timestamp(0)
  patients  AdrressesOfPatients[]
}

model AdrressesOfPatients {
  id        String
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  address   Address  @relation(fields: [addressId], references: [id])
  addressId String
  createdAt DateTime @default(now())
  updatedAt DateTime @db.Timestamp(0)

  @@id([patientId, addressId])
}

model AffiliateType {
  id        String    @id @default(uuid())
  code      String    @db.Char(1)
  name      String    @unique() @db.VarChar(30)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @db.Timestamp(0)
  patients  Patient[]
}
